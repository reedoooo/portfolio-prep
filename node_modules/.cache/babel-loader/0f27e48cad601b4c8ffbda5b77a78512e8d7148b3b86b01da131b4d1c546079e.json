{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.InlineIcon = exports.Icon = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Unique id counter\n *\n * @type {number}\n */\nvar idCounter = 0;\n/**\n * Regex used to split dimensions\n *\n * @type {RegExp}\n * @private\n */\n\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Attributes used for icon\n *\n * @type {string[]}\n */\n\nvar iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\n/**\n * Default attribute values\n *\n * @type {object}\n */\n\nvar defaultAttributes = {\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  hFlip: false,\n  vFlip: false\n};\n/**\n * Add missing properties to icon\n *\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\n *\n * JavaScript version uses separate file so this function could be used in React and other components without loading\n * entire Collection class.\n *\n * @param {object} data\n * @return {object}\n */\n\nfunction normalize(data) {\n  // Object.create, compatible with IE11\n  var item = Object.create(null);\n  var key;\n  for (key in defaultAttributes) {\n    item[key] = defaultAttributes[key];\n  }\n  for (key in data) {\n    item[key] = data[key];\n  } // Attributes derived from other attributes\n\n  if (item.inlineTop === void 0) {\n    item.inlineTop = item.top;\n  }\n  if (item.inlineHeight === void 0) {\n    item.inlineHeight = item.height;\n  }\n  if (item.verticalAlign === void 0) {\n    // -0.143 if icon is designed for 14px height,\n    // otherwise assume icon is designed for 16px height\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\n  }\n  return item;\n}\n/**\n * Get preserveAspectRatio attribute value\n *\n * @param {object} align\n * @return {string}\n * @private\n */\n\nfunction getAlignment(align) {\n  var result;\n  switch (align.horizontal) {\n    case 'left':\n      result = 'xMin';\n      break;\n    case 'right':\n      result = 'xMax';\n      break;\n    default:\n      result = 'xMid';\n  }\n  switch (align.vertical) {\n    case 'top':\n      result += 'YMin';\n      break;\n    case 'bottom':\n      result += 'YMax';\n      break;\n    default:\n      result += 'YMid';\n  }\n  result += align.slice ? ' slice' : ' meet';\n  return result;\n}\n/**\n * SVG class\n *\n * @see @iconify/json-tools/src/svg.js\n */\n\nvar SVG = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   *\n   * @param icon Icon data\n   *  Use Collection.getIconData() to retrieve icon data\n   */\n  function SVG(icon) {\n    _classCallCheck(this, SVG);\n    this._item = icon;\n  }\n  /**\n   * Get SVG attributes\n   *\n   * @param {object} props Custom properties (same as query string in Iconify API)\n   * @returns {string}\n   */\n\n  _createClass(SVG, [{\n    key: \"getAttributes\",\n    value: function getAttributes(props) {\n      var item = this._item;\n      if (_typeof(props) !== 'object') {\n        props = Object.create(null);\n      } // Set data\n\n      var align = {\n        horizontal: 'center',\n        vertical: 'middle',\n        slice: false\n      };\n      var transform = {\n        rotate: item.rotate,\n        hFlip: item.hFlip,\n        vFlip: item.vFlip\n      };\n      var style = Object.create(null);\n      var attributes = Object.create(null); // Get width/height\n\n      var inline = props.inline === true || props.inline === 'true' || props.inline === '1';\n      var box = {\n        left: item.left,\n        top: inline ? item.inlineTop : item.top,\n        width: item.width,\n        height: inline ? item.inlineHeight : item.height\n      }; // Transformations\n\n      ['hFlip', 'vFlip'].forEach(function (key) {\n        if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\n          transform[key] = !transform[key];\n        }\n      });\n      if (props.flip !== void 0) {\n        props.flip.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'horizontal':\n              transform.hFlip = !transform.hFlip;\n              break;\n            case 'vertical':\n              transform.vFlip = !transform.vFlip;\n          }\n        });\n      }\n      if (props.rotate !== void 0) {\n        var value = props.rotate;\n        if (typeof value === 'number') {\n          transform.rotate += value;\n        } else if (typeof value === 'string') {\n          var units = value.replace(/^-?[0-9.]*/, '');\n          if (units === '') {\n            value = parseInt(value);\n            if (!isNaN(value)) {\n              transform.rotate += value;\n            }\n          } else if (units !== value) {\n            var split = false;\n            switch (units) {\n              case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n              case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n            }\n            if (split) {\n              value = parseInt(value.slice(0, value.length - units.length));\n              if (!isNaN(value)) {\n                transform.rotate += Math.round(value / split);\n              }\n            }\n          }\n        }\n      } // Apply transformations to box\n\n      var transformations = [],\n        tempValue;\n      if (transform.hFlip) {\n        if (transform.vFlip) {\n          transform.rotate += 2;\n        } else {\n          // Horizontal flip\n          transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\n          transformations.push('scale(-1 1)');\n          box.top = box.left = 0;\n        }\n      } else if (transform.vFlip) {\n        // Vertical flip\n        transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\n        transformations.push('scale(1 -1)');\n        box.top = box.left = 0;\n      }\n      switch (transform.rotate % 4) {\n        case 1:\n          // 90deg\n          tempValue = box.height / 2 + box.top;\n          transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n          break;\n        case 2:\n          // 180deg\n          transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\n          break;\n        case 3:\n          // 270deg\n          tempValue = box.width / 2 + box.left;\n          transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n          break;\n      } // Calculate dimensions\n      // Values for width/height: null = default, 'auto' = from svg, false = do not set\n      // Default: if both values aren't set, height defaults to '1em', width is calculated from height\n\n      var customWidth = props.width ? props.width : null;\n      var customHeight = props.height ? props.height : null;\n      var width, height;\n      if (customWidth === null && customHeight === null) {\n        customHeight = '1em';\n      }\n      if (customWidth !== null && customHeight !== null) {\n        width = customWidth;\n        height = customHeight;\n      } else if (customWidth !== null) {\n        width = customWidth;\n        height = SVG.calculateDimension(width, box.height / box.width);\n      } else {\n        height = customHeight;\n        width = SVG.calculateDimension(height, box.width / box.height);\n      }\n      if (width !== false) {\n        attributes.width = width === 'auto' ? box.width : width;\n      }\n      if (height !== false) {\n        attributes.height = height === 'auto' ? box.height : height;\n      } // Add vertical-align for inline icon\n\n      if (inline && item.verticalAlign !== 0) {\n        style['vertical-align'] = item.verticalAlign + 'em';\n      } // Check custom alignment\n\n      if (props.align !== void 0) {\n        props.align.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'left':\n            case 'right':\n            case 'center':\n              align.horizontal = value;\n              break;\n            case 'top':\n            case 'bottom':\n            case 'middle':\n              align.vertical = value;\n              break;\n            case 'crop':\n              align.slice = true;\n              break;\n            case 'meet':\n              align.slice = false;\n          }\n        });\n      } // Generate viewBox and preserveAspectRatio attributes\n\n      attributes.preserveAspectRatio = getAlignment(align);\n      attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height; // Generate body\n\n      var body = SVG.replaceIDs(item.body);\n      if (props.color !== void 0) {\n        body = body.replace(/currentColor/g, props.color);\n      }\n      if (transformations.length) {\n        body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\n      }\n      if (props.box === true || props.box === 'true' || props.box === '1') {\n        // Add transparent bounding box\n        body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\n      }\n      return {\n        attributes: attributes,\n        body: body,\n        style: style\n      };\n    }\n    /**\n     * Generate SVG\n     *\n     * @param {object} props Custom properties (same as query string in Iconify API)\n     * @param {boolean} [addExtra] True if extra attributes should be added to SVG.\n     *  Due to lack of functions in JavaScript for escaping attributes, it is your job to make sure key and value are both properly escaped. Default value is false.\n     * @returns {string}\n     */\n  }, {\n    key: \"getSVG\",\n    value: function getSVG(props, addExtra) {\n      var attributes = SVG.splitAttributes(props),\n        data = this.getAttributes(attributes.icon);\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"'; // Add extra attributes - assume that their names and values are escaped\n\n      if (addExtra) {\n        Object.keys(attributes.node).forEach(function (attr) {\n          svg += ' ' + attr + '=\"' + attributes.node[attr] + '\"';\n        });\n      } // Add SVG attributes\n\n      Object.keys(data.attributes).forEach(function (attr) {\n        svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\n      }); // Add style with 360deg transformation to style to prevent subpixel rendering bug\n\n      svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\n      Object.keys(data.style).forEach(function (attr) {\n        svg += ' ' + attr + ': ' + data.style[attr] + ';';\n      });\n      if (props && props.style !== void 0) {\n        svg += props.style;\n      }\n      svg += '\">';\n      svg += data.body + '</svg>';\n      return svg;\n    }\n    /**\n     * Split attributes\n     *\n     * @param props\n     * @return {{icon: {}, node: {}}}\n     */\n  }], [{\n    key: \"splitAttributes\",\n    value: function splitAttributes(props) {\n      var result = {\n        icon: Object.create(null),\n        node: Object.create(null)\n      };\n      Object.keys(props).forEach(function (name) {\n        result[iconAttributes.indexOf(name) === -1 ? 'node' : 'icon'][name] = props[name];\n      });\n      return result;\n    }\n    /**\n     * Calculate second dimension when only 1 dimension is set\n     *\n     * @param {string|number} size One dimension (such as width)\n     * @param {number} ratio Width/height ratio.\n     *      If size == width, ratio = height/width\n     *      If size == height, ratio = width/height\n     * @param {number} [precision] Floating number precision in result to minimize output. Default = 100\n     * @return {string|number|null} Another dimension, null on error\n     */\n  }, {\n    key: \"calculateDimension\",\n    value: function calculateDimension(size, ratio, precision) {\n      if (ratio === 1) {\n        return size;\n      }\n      precision = precision === void 0 ? 100 : precision;\n      if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n      } // split code into sets of strings and numbers\n\n      var split = size.split(unitsSplit);\n      if (split === null || !split.length) {\n        return null;\n      }\n      var results = [],\n        code = split.shift(),\n        isNumber = unitsTest.test(code),\n        num;\n      while (true) {\n        if (isNumber) {\n          num = parseFloat(code);\n          if (isNaN(num)) {\n            results.push(code);\n          } else {\n            results.push(Math.ceil(num * ratio * precision) / precision);\n          }\n        } else {\n          results.push(code);\n        } // next\n\n        code = split.shift();\n        if (code === void 0) {\n          return results.join('');\n        }\n        isNumber = !isNumber;\n      }\n    }\n    /**\n     * Replace IDs in SVG output with unique IDs\n     * Fast replacement without parsing XML, assuming commonly used patterns.\n     *\n     * @param {string} body\n     * @return {string}\n     */\n  }, {\n    key: \"replaceIDs\",\n    value: function replaceIDs(body) {\n      var regex = /\\sid=\"(\\S+)\"/g,\n        ids = [],\n        match,\n        prefix;\n      function strReplace(search, replace, subject) {\n        var pos = 0;\n        while ((pos = subject.indexOf(search, pos)) !== -1) {\n          subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\n          pos += replace.length;\n        }\n        return subject;\n      } // Find all IDs\n\n      while (match = regex.exec(body)) {\n        ids.push(match[1]);\n      }\n      if (!ids.length) {\n        return body;\n      }\n      prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-'; // Replace with unique ids\n\n      ids.forEach(function (id) {\n        var newID = prefix + idCounter;\n        idCounter++;\n        body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\n        body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\n        body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\n      });\n      return body;\n    }\n  }]);\n  return SVG;\n}();\n/**\n * Create React component with SVG data\n *\n * @param {object} props\n * @param {boolean} inline\n * @return {null|React.Component}\n */\n\nfunction component(props, inline) {\n  if (_typeof(props.icon) !== 'object') {\n    return null;\n  } // Split properties into SVG properties and icon properties\n\n  var split = SVG.splitAttributes(props),\n    iconProps = split.icon,\n    customAttributes = split.node;\n  delete customAttributes.icon; // Set default inline value\n\n  if (iconProps.inline === void 0) {\n    iconProps.inline = inline;\n  } // Get SVG data\n\n  var svg = new SVG(normalize(props.icon));\n  var iconData = svg.getAttributes(iconProps); // Set style\n\n  var style = {\n    transform: 'rotate(360deg)'\n  };\n  if (iconData.style['vertical-align'] !== void 0) {\n    style.verticalAlign = iconData.style['vertical-align'];\n  }\n  if (props.style !== void 0) {\n    for (var _key in props.style) {\n      style[_key] = props.style[_key];\n    }\n  } // Generate element attributes\n\n  var attributes = {\n    xmlns: 'http://www.w3.org/2000/svg',\n    focusable: false,\n    style: style\n  };\n  var key;\n  for (key in customAttributes) {\n    attributes[key] = customAttributes[key];\n  }\n  for (key in iconData.attributes) {\n    attributes[key] = iconData.attributes[key];\n  }\n  attributes.dangerouslySetInnerHTML = {\n    __html: iconData.body\n  }; // Generate SVG\n\n  return _react[\"default\"].createElement('svg', attributes, null);\n}\n/**\n * Icon without vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\nvar Icon = function Icon(props) {\n  return component(props, false);\n};\n/**\n * Icon with vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\nexports.Icon = Icon;\nvar InlineIcon = function InlineIcon(props) {\n  return component(props, true);\n};\n/**\n * Default export\n */\n\nexports.InlineIcon = InlineIcon;\nvar _default = Icon;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","InlineIcon","Icon","_react","_interopRequireDefault","require","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","idCounter","unitsSplit","unitsTest","iconAttributes","defaultAttributes","left","top","width","height","rotate","hFlip","vFlip","normalize","data","item","create","inlineTop","inlineHeight","verticalAlign","getAlignment","align","result","horizontal","vertical","slice","SVG","icon","_item","getAttributes","transform","style","attributes","inline","box","forEach","flip","toLowerCase","split","units","replace","parseInt","isNaN","Math","round","transformations","tempValue","push","unshift","customWidth","customHeight","calculateDimension","preserveAspectRatio","viewBox","body","replaceIDs","color","join","getSVG","addExtra","splitAttributes","svg","keys","node","attr","name","indexOf","size","ratio","precision","ceil","results","code","shift","isNumber","test","num","parseFloat","regex","ids","match","prefix","strReplace","search","subject","pos","exec","Date","now","toString","random","id","newID","component","iconProps","customAttributes","iconData","_key","xmlns","focusable","dangerouslySetInnerHTML","__html","createElement","_default"],"sources":["/Users/petervogt/Desktop/portfolio-prep/node_modules/@iconify/react/dist/icon.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.InlineIcon = exports.Icon = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Unique id counter\n *\n * @type {number}\n */\nvar idCounter = 0;\n/**\n * Regex used to split dimensions\n *\n * @type {RegExp}\n * @private\n */\n\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Attributes used for icon\n *\n * @type {string[]}\n */\n\nvar iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\n/**\n * Default attribute values\n *\n * @type {object}\n */\n\nvar defaultAttributes = {\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  hFlip: false,\n  vFlip: false\n};\n/**\n * Add missing properties to icon\n *\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\n *\n * JavaScript version uses separate file so this function could be used in React and other components without loading\n * entire Collection class.\n *\n * @param {object} data\n * @return {object}\n */\n\nfunction normalize(data) {\n  // Object.create, compatible with IE11\n  var item = Object.create(null);\n  var key;\n\n  for (key in defaultAttributes) {\n    item[key] = defaultAttributes[key];\n  }\n\n  for (key in data) {\n    item[key] = data[key];\n  } // Attributes derived from other attributes\n\n\n  if (item.inlineTop === void 0) {\n    item.inlineTop = item.top;\n  }\n\n  if (item.inlineHeight === void 0) {\n    item.inlineHeight = item.height;\n  }\n\n  if (item.verticalAlign === void 0) {\n    // -0.143 if icon is designed for 14px height,\n    // otherwise assume icon is designed for 16px height\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\n  }\n\n  return item;\n}\n/**\n * Get preserveAspectRatio attribute value\n *\n * @param {object} align\n * @return {string}\n * @private\n */\n\n\nfunction getAlignment(align) {\n  var result;\n\n  switch (align.horizontal) {\n    case 'left':\n      result = 'xMin';\n      break;\n\n    case 'right':\n      result = 'xMax';\n      break;\n\n    default:\n      result = 'xMid';\n  }\n\n  switch (align.vertical) {\n    case 'top':\n      result += 'YMin';\n      break;\n\n    case 'bottom':\n      result += 'YMax';\n      break;\n\n    default:\n      result += 'YMid';\n  }\n\n  result += align.slice ? ' slice' : ' meet';\n  return result;\n}\n/**\n * SVG class\n *\n * @see @iconify/json-tools/src/svg.js\n */\n\n\nvar SVG = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   *\n   * @param icon Icon data\n   *  Use Collection.getIconData() to retrieve icon data\n   */\n  function SVG(icon) {\n    _classCallCheck(this, SVG);\n\n    this._item = icon;\n  }\n  /**\n   * Get SVG attributes\n   *\n   * @param {object} props Custom properties (same as query string in Iconify API)\n   * @returns {string}\n   */\n\n\n  _createClass(SVG, [{\n    key: \"getAttributes\",\n    value: function getAttributes(props) {\n      var item = this._item;\n\n      if (_typeof(props) !== 'object') {\n        props = Object.create(null);\n      } // Set data\n\n\n      var align = {\n        horizontal: 'center',\n        vertical: 'middle',\n        slice: false\n      };\n      var transform = {\n        rotate: item.rotate,\n        hFlip: item.hFlip,\n        vFlip: item.vFlip\n      };\n      var style = Object.create(null);\n      var attributes = Object.create(null); // Get width/height\n\n      var inline = props.inline === true || props.inline === 'true' || props.inline === '1';\n      var box = {\n        left: item.left,\n        top: inline ? item.inlineTop : item.top,\n        width: item.width,\n        height: inline ? item.inlineHeight : item.height\n      }; // Transformations\n\n      ['hFlip', 'vFlip'].forEach(function (key) {\n        if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\n          transform[key] = !transform[key];\n        }\n      });\n\n      if (props.flip !== void 0) {\n        props.flip.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'horizontal':\n              transform.hFlip = !transform.hFlip;\n              break;\n\n            case 'vertical':\n              transform.vFlip = !transform.vFlip;\n          }\n        });\n      }\n\n      if (props.rotate !== void 0) {\n        var value = props.rotate;\n\n        if (typeof value === 'number') {\n          transform.rotate += value;\n        } else if (typeof value === 'string') {\n          var units = value.replace(/^-?[0-9.]*/, '');\n\n          if (units === '') {\n            value = parseInt(value);\n\n            if (!isNaN(value)) {\n              transform.rotate += value;\n            }\n          } else if (units !== value) {\n            var split = false;\n\n            switch (units) {\n              case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n\n              case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n            }\n\n            if (split) {\n              value = parseInt(value.slice(0, value.length - units.length));\n\n              if (!isNaN(value)) {\n                transform.rotate += Math.round(value / split);\n              }\n            }\n          }\n        }\n      } // Apply transformations to box\n\n\n      var transformations = [],\n          tempValue;\n\n      if (transform.hFlip) {\n        if (transform.vFlip) {\n          transform.rotate += 2;\n        } else {\n          // Horizontal flip\n          transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\n          transformations.push('scale(-1 1)');\n          box.top = box.left = 0;\n        }\n      } else if (transform.vFlip) {\n        // Vertical flip\n        transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\n        transformations.push('scale(1 -1)');\n        box.top = box.left = 0;\n      }\n\n      switch (transform.rotate % 4) {\n        case 1:\n          // 90deg\n          tempValue = box.height / 2 + box.top;\n          transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n\n        case 2:\n          // 180deg\n          transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\n          break;\n\n        case 3:\n          // 270deg\n          tempValue = box.width / 2 + box.left;\n          transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n      } // Calculate dimensions\n      // Values for width/height: null = default, 'auto' = from svg, false = do not set\n      // Default: if both values aren't set, height defaults to '1em', width is calculated from height\n\n\n      var customWidth = props.width ? props.width : null;\n      var customHeight = props.height ? props.height : null;\n      var width, height;\n\n      if (customWidth === null && customHeight === null) {\n        customHeight = '1em';\n      }\n\n      if (customWidth !== null && customHeight !== null) {\n        width = customWidth;\n        height = customHeight;\n      } else if (customWidth !== null) {\n        width = customWidth;\n        height = SVG.calculateDimension(width, box.height / box.width);\n      } else {\n        height = customHeight;\n        width = SVG.calculateDimension(height, box.width / box.height);\n      }\n\n      if (width !== false) {\n        attributes.width = width === 'auto' ? box.width : width;\n      }\n\n      if (height !== false) {\n        attributes.height = height === 'auto' ? box.height : height;\n      } // Add vertical-align for inline icon\n\n\n      if (inline && item.verticalAlign !== 0) {\n        style['vertical-align'] = item.verticalAlign + 'em';\n      } // Check custom alignment\n\n\n      if (props.align !== void 0) {\n        props.align.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'left':\n            case 'right':\n            case 'center':\n              align.horizontal = value;\n              break;\n\n            case 'top':\n            case 'bottom':\n            case 'middle':\n              align.vertical = value;\n              break;\n\n            case 'crop':\n              align.slice = true;\n              break;\n\n            case 'meet':\n              align.slice = false;\n          }\n        });\n      } // Generate viewBox and preserveAspectRatio attributes\n\n\n      attributes.preserveAspectRatio = getAlignment(align);\n      attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height; // Generate body\n\n      var body = SVG.replaceIDs(item.body);\n\n      if (props.color !== void 0) {\n        body = body.replace(/currentColor/g, props.color);\n      }\n\n      if (transformations.length) {\n        body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\n      }\n\n      if (props.box === true || props.box === 'true' || props.box === '1') {\n        // Add transparent bounding box\n        body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\n      }\n\n      return {\n        attributes: attributes,\n        body: body,\n        style: style\n      };\n    }\n    /**\n     * Generate SVG\n     *\n     * @param {object} props Custom properties (same as query string in Iconify API)\n     * @param {boolean} [addExtra] True if extra attributes should be added to SVG.\n     *  Due to lack of functions in JavaScript for escaping attributes, it is your job to make sure key and value are both properly escaped. Default value is false.\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getSVG\",\n    value: function getSVG(props, addExtra) {\n      var attributes = SVG.splitAttributes(props),\n          data = this.getAttributes(attributes.icon);\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"'; // Add extra attributes - assume that their names and values are escaped\n\n      if (addExtra) {\n        Object.keys(attributes.node).forEach(function (attr) {\n          svg += ' ' + attr + '=\"' + attributes.node[attr] + '\"';\n        });\n      } // Add SVG attributes\n\n\n      Object.keys(data.attributes).forEach(function (attr) {\n        svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\n      }); // Add style with 360deg transformation to style to prevent subpixel rendering bug\n\n      svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\n      Object.keys(data.style).forEach(function (attr) {\n        svg += ' ' + attr + ': ' + data.style[attr] + ';';\n      });\n\n      if (props && props.style !== void 0) {\n        svg += props.style;\n      }\n\n      svg += '\">';\n      svg += data.body + '</svg>';\n      return svg;\n    }\n    /**\n     * Split attributes\n     *\n     * @param props\n     * @return {{icon: {}, node: {}}}\n     */\n\n  }], [{\n    key: \"splitAttributes\",\n    value: function splitAttributes(props) {\n      var result = {\n        icon: Object.create(null),\n        node: Object.create(null)\n      };\n      Object.keys(props).forEach(function (name) {\n        result[iconAttributes.indexOf(name) === -1 ? 'node' : 'icon'][name] = props[name];\n      });\n      return result;\n    }\n    /**\n     * Calculate second dimension when only 1 dimension is set\n     *\n     * @param {string|number} size One dimension (such as width)\n     * @param {number} ratio Width/height ratio.\n     *      If size == width, ratio = height/width\n     *      If size == height, ratio = width/height\n     * @param {number} [precision] Floating number precision in result to minimize output. Default = 100\n     * @return {string|number|null} Another dimension, null on error\n     */\n\n  }, {\n    key: \"calculateDimension\",\n    value: function calculateDimension(size, ratio, precision) {\n      if (ratio === 1) {\n        return size;\n      }\n\n      precision = precision === void 0 ? 100 : precision;\n\n      if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n      } // split code into sets of strings and numbers\n\n\n      var split = size.split(unitsSplit);\n\n      if (split === null || !split.length) {\n        return null;\n      }\n\n      var results = [],\n          code = split.shift(),\n          isNumber = unitsTest.test(code),\n          num;\n\n      while (true) {\n        if (isNumber) {\n          num = parseFloat(code);\n\n          if (isNaN(num)) {\n            results.push(code);\n          } else {\n            results.push(Math.ceil(num * ratio * precision) / precision);\n          }\n        } else {\n          results.push(code);\n        } // next\n\n\n        code = split.shift();\n\n        if (code === void 0) {\n          return results.join('');\n        }\n\n        isNumber = !isNumber;\n      }\n    }\n    /**\n     * Replace IDs in SVG output with unique IDs\n     * Fast replacement without parsing XML, assuming commonly used patterns.\n     *\n     * @param {string} body\n     * @return {string}\n     */\n\n  }, {\n    key: \"replaceIDs\",\n    value: function replaceIDs(body) {\n      var regex = /\\sid=\"(\\S+)\"/g,\n          ids = [],\n          match,\n          prefix;\n\n      function strReplace(search, replace, subject) {\n        var pos = 0;\n\n        while ((pos = subject.indexOf(search, pos)) !== -1) {\n          subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\n          pos += replace.length;\n        }\n\n        return subject;\n      } // Find all IDs\n\n\n      while (match = regex.exec(body)) {\n        ids.push(match[1]);\n      }\n\n      if (!ids.length) {\n        return body;\n      }\n\n      prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-'; // Replace with unique ids\n\n      ids.forEach(function (id) {\n        var newID = prefix + idCounter;\n        idCounter++;\n        body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\n        body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\n        body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\n      });\n      return body;\n    }\n  }]);\n\n  return SVG;\n}();\n/**\n * Create React component with SVG data\n *\n * @param {object} props\n * @param {boolean} inline\n * @return {null|React.Component}\n */\n\n\nfunction component(props, inline) {\n  if (_typeof(props.icon) !== 'object') {\n    return null;\n  } // Split properties into SVG properties and icon properties\n\n\n  var split = SVG.splitAttributes(props),\n      iconProps = split.icon,\n      customAttributes = split.node;\n  delete customAttributes.icon; // Set default inline value\n\n  if (iconProps.inline === void 0) {\n    iconProps.inline = inline;\n  } // Get SVG data\n\n\n  var svg = new SVG(normalize(props.icon));\n  var iconData = svg.getAttributes(iconProps); // Set style\n\n  var style = {\n    transform: 'rotate(360deg)'\n  };\n\n  if (iconData.style['vertical-align'] !== void 0) {\n    style.verticalAlign = iconData.style['vertical-align'];\n  }\n\n  if (props.style !== void 0) {\n    for (var _key in props.style) {\n      style[_key] = props.style[_key];\n    }\n  } // Generate element attributes\n\n\n  var attributes = {\n    xmlns: 'http://www.w3.org/2000/svg',\n    focusable: false,\n    style: style\n  };\n  var key;\n\n  for (key in customAttributes) {\n    attributes[key] = customAttributes[key];\n  }\n\n  for (key in iconData.attributes) {\n    attributes[key] = iconData.attributes[key];\n  }\n\n  attributes.dangerouslySetInnerHTML = {\n    __html: iconData.body\n  }; // Generate SVG\n\n  return _react[\"default\"].createElement('svg', attributes, null);\n}\n/**\n * Icon without vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nvar Icon = function Icon(props) {\n  return component(props, false);\n};\n/**\n * Icon with vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nexports.Icon = Icon;\n\nvar InlineIcon = function InlineIcon(props) {\n  return component(props, true);\n};\n/**\n * Default export\n */\n\n\nexports.InlineIcon = InlineIcon;\nvar _default = Icon;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}